trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

#- script: ls -la $(Build.ArtifactStagingDirectory)/app
#  displayName: 'List Published Output'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'TestPipelinesMS'

#- task: ArchiveFiles@2
#  displayName: 'Archive files'
#  inputs:
#    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/app'
#    includeRootFolder: false
#    archiveType: 'zip'
#    archiveFile: '$(Build.ArtifactStagingDirectory)/build_output.zip'

#- script: ls -la $(Build.ArtifactStagingDirectory)
#  displayName: 'List Artifact Staging Directory'

#- task: PublishBuildArtifacts@1
#  displayName: 'Publish Artifact'
#  inputs:
#    pathToPublish: '$(Build.ArtifactStagingDirectory)/build_output.zip'
#    artifactName: 'app'

#- script: ls -la $(Pipeline.Workspace)
#  displayName: 'List Pipeline Workspace'

- task: AzureWebApp@1
  displayName: 'Deploy to Azure App Service'
  inputs:
    azureSubscription: 'AzureServiceConnection'
    appType: 'webApp'
    appName: 'TestPipelinesMS'
    deployToSlotOrASE: true
    resourceGroupName: 'Sandbox'
    package: $(Build.ArtifactStagingDirectory)/**/*.zip

#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#    ArtifactName: 'TestPipelinesMS'
#    publishLocation: 'Container'

#- task: AzureRmWebAppDeployment@4
#  inputs:
#    ConnectionType: 'AzureRM'
#    azureSubscription: 'AzureServiceConnection'
#    appType: 'webApp'
#    WebAppName: 'TestPipelinesMS'
#    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'